
//definindo os pinos do display de catodo comum

const int A = 13;
const int B = 12;
const int C = 11;
const int D = 10;
const int E = 9;
const int F = 8;
const int G = 7;

//definindo os pinos do display de anodo comum
 
const int A= 6;
const int B = 5;
const int C = 4;
const int D = 3;
const int E = 2;
const int F = 1;
const int G = 0;
 
//definindo os pinos dos botões 1 e 2
const int Botão1 = A0;
const int Botao2 = A3;
int EstadoBotao1 = 0;
int EstadoBotao2 = 0;

voide setup(){
//definindo os modos dos pinos dos botoes
pinMode(A0,INPUT);
pinMode(A3,INPUT);
//definindo os modos dos pinos do display de catodo comum
pinMOde(13,OUTPUT);
pinMOde(12,OUTPUT);
pinMode(11,OUTPUT);
pinMode(10,OUTPUT);
pinMode(9,OUTPUT);
pinMode(8,OUTPUT);
pinMode(7,OUTPUT);
//definindo os modos dos pinos do display de anodo comum
pinMOde(6,OUTPUT);
pinMOde(5,OUTPUT);
pinMode(4,OUTPUT);
pinMode(3,OUTPUT);
pinMode(2,OUTPUT);
pinMode(1,OUTPUT);
pinMode(0,OUTPUT);
}
void loop(){
EstadoBotao1 = digitalRead(Botao1);//essa variavel vai ter a informação do estado do botão1
EstadoBotao2 = digitalRead(Botao2);//essa variaval vai ter a informação do estado do botão2

int i = 0;//criando uma variavel com um valor inicial,para ajudar na contagem
int j = 0;//criando uma variavel com um valor inicial para ajudar na contagem

while( i < 10){//esse loop tem o fim de obter o numero de toques do usuario
       if(EstadoBotao1 == HIGH){// esse loop vai checar se o botão1 foi apertado e se ele foi, será adicionar uma unidade a variavel i
       i = i + 1;
       return i;
       delay(1000);
    }
    else{
        return i;
        while(j < 10){//esse loop irá checar se o botão2 foi apertado e se ele foi será adicionar uma unidade a variavel j
            if(EstadoBotao2 == HIGH){
                 j = j + 1;
                 return j;
                 delay(1000);
             }
             else{//caso isso não ocorra ele deve retorna o valor de j(sendo que i foi retornado anteriormente) e quebrar o loop while.
                 return j;
                 break;
    }
}
int f(){//essa função tem o objetivo de fazer a multiplicação entre os valores obtidos pelos toques
   //Subtrai uma unidade para obter k= 0 ou h= 0,caso um deles(botões) tenha sido apertados uma unica vez.
   k = j - 1;
   h = i - 1;
   multi = k*h;
   decimal= int  multi/10;//para obter o valor decimal da multiplicação, dividi a multiplicação por 10
   unidade= multi-(decimal)*10;//para obter o valor da unidade do resultado da multiplicação peguei o valor da multiplicação e subtrai pelo valor da decimal multiplicado por 10.
   return  decimal, int unidade;

if(decimal == 0){//display de catodo comum mostra o algarismo 0
  digitalWrite(13,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(11,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(7,Low);
  delay(5000)
}
if(decimal == 1){{//display mostra o algarismo 1
  digitalWrite(13,LOW);
  digitalWrite(12,HIGH);
  digitalWrite(11,HIGH);
  digitalWrite(10,LOW);
  digitalWrite(9,LOW);
  digitalWrite(8,LOW);
  digitalWrite(7,Low);
  delay(5000)
}
if(decimal == 2){{//display mostra o algarismo 2
  digitalWrite(13,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(11,LOW);
  digitalWrite(10,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(8,LOW);
  digitalWrite(7,HIGH);
  delay(5000)
}
if(decimal == 3){//display mostra o algarismo 3
  digitalWrite(13,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(11,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(9,LOW);
  digitalWrite(8,LOW);
  digitalWrite(7,HIGH);
  delay(5000)
}
if(decimal == 4){//display mostra o algarismo 4
  digitalWrite(13,LOW);
  digitalWrite(12,HIGH);
  digitalWrite(11,HIGH);
  digitalWrite(10,LOW);
  digitalWrite(9,LOW);
  digitalWrite(8,HIGH);
  digitalWrite(7,HIGH);
  delay(5000)
}
if(decimal == 5){//display mostra o algarismo 5
  digitalWrite(13,HIGH);
  digitalWrite(12,LOW);
  digitalWrite(11,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(9,LOW);
  digitalWrite(8,HIGH);
  digitalWrite(7,HIGH);
  delay(5000)
}
if(decimal == 6){//display mostra o algarismo 6
  digitalWrite(13,LOW);
  digitalWrite(12,LOW);
  digitalWrite(11,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(7,HIGH);
  delay(5000)
}
if(decimal == 7){//display mostra o algarismo 7
  digitalWrite(13,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(11,HIGH);
  digitalWrite(10,LOW);
  digitalWrite(9,LOW);
  digitalWrite(8,LOW);
  digitalWrite(7,Low);
  delay(5000)
}
if(decimal == 8){//display mostra o algarismo 8
  digitalWrite(13,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(11,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(7,HIGH);
  delay(5000)
}
if(decimal == 9){//display mostra o algarismo 9
  digitalWrite(13,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(11,HIGH);
  digitalWrite(10,LOW);
  digitalWrite(9,LOW);
  digitalWrite(8,HIGH);
  digitalWrite(7,HIGH);
  delay(5000)
}

if(unidade == 0){//display mostra o algarismo 0
  digitalWrite(6,HIGH);
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,HIGH);
  digitalWrite(2,HIGH);
  digitalWrite(1,HIGH);
  digitalWrite(0,Low);
  delay(5000)
}
if(unidade == 1){//display mostra o algarismo 1
  digitalWrite(6,LOW);
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,LOW);
  digitalWrite(2,LOW);
  digitalWrite(1,LOW);
  digitalWrite(0,Low);
  delay(5000)
}
if(unidade == 2){//display mostra o algarismo 2
  digitalWrite(6,HIGH);
  digitalWrite(5,HIGH);
  digitalWrite(4,LOW);
  digitalWrite(3,HIGH);
  digitalWrite(2,HIGH);
  digitalWrite(1,LOW);
  digitalWrite(0,HIGH);
  delay(5000)
}
if(unidade == 3){//display mostra o algarismo 3
  digitalWrite(6,HIGH);
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,HIGH);
  digitalWrite(2,LOW);
  digitalWrite(1,LOW);
  digitalWrite(0,HIGH);
  delay(5000)
}
if(unidade == 4){//display mostra o algarismo 4
  digitalWrite(6,LOW);
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,LOW);
  digitalWrite(2,LOW);
  digitalWrite(1,HIGH);
  digitalWrite(0,HIGH);
  delay(5000)
}
if(unidade == 5){//display mostra o algarismo 5
  digitalWrite(6,HIGH);
  digitalWrite(5,LOW);
  digitalWrite(4,HIGH);
  digitalWrite(3,HIGH);
  digitalWrite(2,LOW);
  digitalWrite(1,HIGH);
  digitalWrite(0,HIGH);
  delay(5000)
}
if(unidade == 6){//display mostra o algarismo 6
  digitalWrite(6,LOW);
  digitalWrite(5,LOW);
  digitalWrite(4,HIGH);
  digitalWrite(3,HIGH);
  digitalWrite(2,HIGH);
  digitalWrite(1,HIGH);
  digitalWrite(0,HIGH);
  delay(5000)
}
if(unidade == 7){//display mostra o algarismo 7
  digitalWrite(6,HIGH);
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,LOW);
  digitalWrite(2,LOW);
  digitalWrite(1,LOW);
  digitalWrite(0,Low);
  delay(5000)
}
if(unidade == 8){//display mostra o algarismo 8
  digitalWrite(6,HIGH);
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,HIGH);
  digitalWrite(2,HIGH);
  digitalWrite(1,HIGH);
  digitalWrite(0,HIGH);
  delay(5000)
}
if(unidade == 9){display mostra o algarismo 9
  digitalWrite(6,HIGH);
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,LOW);
  digitalWrite(2,LOW);
  digitalWrite(1,HIGH);
  digitalWrite(0,HIGH);
  delay(5000)
}
}

    

    

